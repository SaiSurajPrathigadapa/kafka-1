# Kafka
spring.kafka.properties.ssl.endpoint.identification.algorithm=https
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=kafka.gcp.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username=""   password="";
spring.kafka.properties.security.protocol=SASL_SSL
# Schema Registry
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=user:password
spring.kafka.properties.schema.registry.url=https://sr1.gcp.confluent.cloud
# producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
# consumer configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.LongDeserializer

# workaround for protobuf consumer 
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.protobuf.KafkaProtobufDeserializer
spring.kafka.properties.specific.protobuf.value.type=io.confluent.developer.proto.MovieProtos$Movie

spring.kafka.streams.application-id=livestreams
spring.kafka.consumer.auto-offset-reset=earliest
